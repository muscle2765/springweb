<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
     http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context.xsd
     http://www.springframework.org/schema/aop
     http://www.springframework.org/schema/aop/spring-aop.xsd
     http://www.springframework.org/schema/tx 
     http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- master数据源 -->
	<bean id="masterDataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<!-- 基本属性 url、user、password --> 
	    <property name="driverClassName" value="${jdbc.driverClassName}" />  
	    <property name="url" value="${jdbc.url}" />  
	    <property name="username" value="${jdbc.username}" />  
	    <property name="password" value="${jdbc.password}" />  
	</bean>
	
	<!-- slave数据源 -->
	<bean id="slaveDataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<!-- 基本属性 url、user、password --> 
	    <property name="driverClassName" value="${slave.jdbc.driverClassName}" />  
	    <property name="url" value="${slave.jdbc.url}" />  
	    <property name="username" value="${slave.jdbc.username}" />  
	    <property name="password" value="${slave.jdbc.password}" />  
	</bean>
	
	<!-- 动态数据源，根据service接口上的注解来决定取哪个数据源 -->
	<bean id="dataSource" class="com.springweb.util.datasource.DynamicDataSource">  
        <property name="targetDataSources">      
          <map key-type="java.lang.String">      
              <!-- read for slave -->    
             <entry key="slave" value-ref="slaveDataSource"/>      
             <!-- write for master   -->  
             <entry key="master" value-ref="masterDataSource"/>      
          </map>            
        </property>
        <property name="defaultTargetDataSource" ref="masterDataSource"/>      
      
    </bean>
	
	<!-- 会话工厂bean sqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:conf/mybatis-config.xml" /> 
		<property name="dataSource" ref="dataSource" />
		<!-- 映射文件路径 -->
		<property name="mapperLocations" value="classpath:conf/dbmapper/*.xml" />
	</bean>

 	<!-- 自动扫描对象关系映射 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.springweb.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<!-- 声明式事务管理 -->
    <!--定义事物管理器，由spring管理事务 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 声明式开启 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" order="1"/>
	
	<!-- 为业务逻辑层的方法解析@DataSource注解  为当前线程的HandleDataSource注入数据源 -->   
    <bean id="dataSourceAspect" class="com.springweb.util.datasource.DataSourceAspect" />    
    <aop:config proxy-target-class="true">    
        <aop:aspect id="dataSourceAspect" ref="dataSourceAspect" order="2">    
            <aop:pointcut id="tx" expression="execution(* com.springweb.service.impl.*.*(..)) "/>    
            <aop:before pointcut-ref="tx" method="before" />                
        </aop:aspect>    
    </aop:config>
</beans>